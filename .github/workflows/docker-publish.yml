name: Build and Push SMTP Lab Docker Image

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Create dummy file for build
        run: |
          echo "dummy" > dummy.txt

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./build
          file: ./build/Dockerfile
          push: true
          tags: |
            cyberctf/smtp-relay-vuln-lab:latest
            cyberctf/smtp-relay-vuln-lab:${{ github.sha }}
          platforms: linux/amd64,linux/arm64

      - name: Cleanup dummy file
        run: |
          rm -f dummy.txt

  test-lab:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start SMTP lab
        run: |
          cd deploy
          DOCKER_BUILDKIT=1 docker-compose up -d --build
          sleep 30

      - name: Test SMTP connectivity
        run: |
          # Wait for service to be ready
          timeout 60 bash -c 'until echo "QUIT" | nc localhost 25; do sleep 2; done'

      - name: Run vulnerability tests
        run: |
          # Test user enumeration
          echo -e "VRFY ceo\r\nQUIT" | nc localhost 25 | grep -q "250 ceo@acmelogistics.local"
          
          # Test normal relay (should fail)
          echo -e "HELO attacker.com\r\nMAIL FROM: <attacker@evil.com>\r\nRCPT TO: <victim@external.com>\r\nQUIT" | nc localhost 25 | grep -q "554 Relay access denied"
          
          # Test vulnerability (should succeed)
          echo -e "HELO attacker.com\r\nMAIL FROM: <ceo@acmelogistics.local>\r\nRCPT TO: <attacker@external.com>\r\nQUIT" | nc localhost 25 | grep -q "250 Ok"

      - name: Run auto-solve script
        run: |
          python3 test/auto_solve.py

      - name: Cleanup
        run: |
          cd deploy
          docker-compose down

  documentation:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate README
        run: |
          grep -q "Acme Logistics SMTP Relay Vulnerability Lab" README.md
          grep -q "X-Admin-Panel-Password" README.md

      - name: Check lab structure
        run: |
          [ -f "build/smtp_server.py" ]
          [ -f "build/Dockerfile" ]
          [ -f "deploy/docker-compose.yml" ]
          [ -f "test/auto_solve.py" ]
          [ -f "test/check_smtp.sh" ]
          [ -f ".gitignore" ]

      - name: Verify no CTF terminology in business context
        run: |
          if grep -r "challenge\|flag\|score\|hack\|exploit" README.md --ignore-case; then
            echo "‚ùå CTF terminology found in business context!"
            exit 1
          fi 